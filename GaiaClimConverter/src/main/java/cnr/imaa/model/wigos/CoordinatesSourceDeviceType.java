//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.07 at 04:39:49 PM CET 
//


package cnr.imaa.model.wigos;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;
import java.io.Serializable;


/**
 * <p>Java class for CoordinatesSourceDevice_Type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CoordinatesSourceDevice_Type">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="GPS"/>
 *     &lt;enumeration value="ARGOS DOPPLER"/>
 *     &lt;enumeration value="IRIDIUM DOPPLER"/>
 *     &lt;enumeration value="ARGOS Kalman"/>
 *     &lt;enumeration value="GALILEO"/>
 *     &lt;enumeration value="LORAN"/>
 *     &lt;enumeration value="Surveyed"/>
 *     &lt;enumeration value="From map"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "CoordinatesSourceDevice_Type")
@XmlEnum
public enum CoordinatesSourceDeviceType implements Serializable {

    GPS("GPS"),
    @XmlEnumValue("ARGOS DOPPLER")
    ARGOS_DOPPLER("ARGOS DOPPLER"),
    @XmlEnumValue("IRIDIUM DOPPLER")
    IRIDIUM_DOPPLER("IRIDIUM DOPPLER"),
    @XmlEnumValue("ARGOS Kalman")
    ARGOS_KALMAN("ARGOS Kalman"),
    GALILEO("GALILEO"),
    LORAN("LORAN"),
    @XmlEnumValue("Surveyed")
    SURVEYED("Surveyed"),
    @XmlEnumValue("From map")
    FROM_MAP("From map");
    private final String value;

    CoordinatesSourceDeviceType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CoordinatesSourceDeviceType fromValue(String v) {
        for (CoordinatesSourceDeviceType c: CoordinatesSourceDeviceType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
