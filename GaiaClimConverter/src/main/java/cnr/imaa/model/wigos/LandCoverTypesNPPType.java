//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.07 at 04:39:49 PM CET 
//


package cnr.imaa.model.wigos;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;
import java.io.Serializable;


/**
 * <p>Java class for landCoverTypes_NPP_Type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="landCoverTypes_NPP_Type">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Not applicable"/>
 *     &lt;enumeration value="Water"/>
 *     &lt;enumeration value="Evergreen needleleaf vegetation"/>
 *     &lt;enumeration value="Evergreen broadleaf vegetation"/>
 *     &lt;enumeration value="Deciduous needleleaf vegetation"/>
 *     &lt;enumeration value="Deciduous broadleaf vegetation"/>
 *     &lt;enumeration value="Annual broadleaf vegetation"/>
 *     &lt;enumeration value="Non-vegetated land"/>
 *     &lt;enumeration value="Urban"/>
 *     &lt;enumeration value="Unclassified"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "landCoverTypes_NPP_Type")
@XmlEnum
public enum LandCoverTypesNPPType implements Serializable {

    @XmlEnumValue("Not applicable")
    NOT_APPLICABLE("Not applicable"),
    @XmlEnumValue("Water")
    WATER("Water"),
    @XmlEnumValue("Evergreen needleleaf vegetation")
    EVERGREEN_NEEDLELEAF_VEGETATION("Evergreen needleleaf vegetation"),
    @XmlEnumValue("Evergreen broadleaf vegetation")
    EVERGREEN_BROADLEAF_VEGETATION("Evergreen broadleaf vegetation"),
    @XmlEnumValue("Deciduous needleleaf vegetation")
    DECIDUOUS_NEEDLELEAF_VEGETATION("Deciduous needleleaf vegetation"),
    @XmlEnumValue("Deciduous broadleaf vegetation")
    DECIDUOUS_BROADLEAF_VEGETATION("Deciduous broadleaf vegetation"),
    @XmlEnumValue("Annual broadleaf vegetation")
    ANNUAL_BROADLEAF_VEGETATION("Annual broadleaf vegetation"),
    @XmlEnumValue("Non-vegetated land")
    NON_VEGETATED_LAND("Non-vegetated land"),
    @XmlEnumValue("Urban")
    URBAN("Urban"),
    @XmlEnumValue("Unclassified")
    UNCLASSIFIED("Unclassified");
    private final String value;

    LandCoverTypesNPPType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LandCoverTypesNPPType fromValue(String v) {
        for (LandCoverTypesNPPType c: LandCoverTypesNPPType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
