//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.07 at 04:39:49 PM CET 
//


package cnr.imaa.model.wigos;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;
import java.io.Serializable;


/**
 * <p>Java class for landCoverTypes_PFT_Type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="landCoverTypes_PFT_Type">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Water"/>
 *     &lt;enumeration value="Evergreen needleleaf trees"/>
 *     &lt;enumeration value="Evergreen broadleaf trees"/>
 *     &lt;enumeration value="Deciduous needleleaf trees"/>
 *     &lt;enumeration value="Deciduous broadleaf trees"/>
 *     &lt;enumeration value="Shrub"/>
 *     &lt;enumeration value="Grass"/>
 *     &lt;enumeration value="Cereal crops"/>
 *     &lt;enumeration value="Broad-leaf crops"/>
 *     &lt;enumeration value="Urban and built-up"/>
 *     &lt;enumeration value="Snow and ice"/>
 *     &lt;enumeration value="Barren or sparse vegetation"/>
 *     &lt;enumeration value="Unclassified"/>
 *     &lt;enumeration value="Fill Value"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "landCoverTypes_PFT_Type")
@XmlEnum
public enum LandCoverTypesPFTType implements Serializable {

    @XmlEnumValue("Water")
    WATER("Water"),
    @XmlEnumValue("Evergreen needleleaf trees")
    EVERGREEN_NEEDLELEAF_TREES("Evergreen needleleaf trees"),
    @XmlEnumValue("Evergreen broadleaf trees")
    EVERGREEN_BROADLEAF_TREES("Evergreen broadleaf trees"),
    @XmlEnumValue("Deciduous needleleaf trees")
    DECIDUOUS_NEEDLELEAF_TREES("Deciduous needleleaf trees"),
    @XmlEnumValue("Deciduous broadleaf trees")
    DECIDUOUS_BROADLEAF_TREES("Deciduous broadleaf trees"),
    @XmlEnumValue("Shrub")
    SHRUB("Shrub"),
    @XmlEnumValue("Grass")
    GRASS("Grass"),
    @XmlEnumValue("Cereal crops")
    CEREAL_CROPS("Cereal crops"),
    @XmlEnumValue("Broad-leaf crops")
    BROAD_LEAF_CROPS("Broad-leaf crops"),
    @XmlEnumValue("Urban and built-up")
    URBAN_AND_BUILT_UP("Urban and built-up"),
    @XmlEnumValue("Snow and ice")
    SNOW_AND_ICE("Snow and ice"),
    @XmlEnumValue("Barren or sparse vegetation")
    BARREN_OR_SPARSE_VEGETATION("Barren or sparse vegetation"),
    @XmlEnumValue("Unclassified")
    UNCLASSIFIED("Unclassified"),
    @XmlEnumValue("Fill Value")
    FILL_VALUE("Fill Value");
    private final String value;

    LandCoverTypesPFTType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LandCoverTypesPFTType fromValue(String v) {
        for (LandCoverTypesPFTType c: LandCoverTypesPFTType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
